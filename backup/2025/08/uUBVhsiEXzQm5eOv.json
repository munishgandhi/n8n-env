{
  "active": false,
  "connections": {
    "N03-Process-With-Ollama": {
      "ai_languageModel": [
        [
          {
            "node": "N02-Generate-Markdown-Guide",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ],
      "main": [
        []
      ]
    },
    "N00 Manual Trigger": {
      "main": [
        [
          {
            "node": "N01-Set-Canonical-Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N01-Set-Canonical-Fields": {
      "main": [
        [
          {
            "node": "N02-Generate-Markdown-Guide",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N02-Generate-Markdown-Guide": {
      "main": [
        [
          {
            "node": "N04a-Create-Toggle-Container",
            "type": "main",
            "index": 0
          },
          {
            "node": "Notion Markdown",
            "type": "main",
            "index": 0
          },
          {
            "node": "N05a-Parse-Markdown-To-Blocks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N04a-Create-Toggle-Container": {
      "main": [
        [
          {
            "node": "N04b-Extract-Toggle-ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N04b-Extract-Toggle-ID": {
      "main": [
        [
          {
            "node": "N06-Merge-Toggle-With-Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N05a-Parse-Markdown-To-Blocks": {
      "main": [
        [
          {
            "node": "N05b-Split-To-Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N05b-Split-To-Items": {
      "main": [
        []
      ]
    },
    "N06-Merge-Toggle-With-Content": {
      "main": [
        [
          {
            "node": "N07-Append-Inside-Toggle",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N07-Append-Inside-Toggle": {
      "main": [
        []
      ]
    },
    "Notion Markdown": {
      "main": [
        [
          {
            "node": "N05b-Split-To-Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N05b-Split-To-Items1": {
      "main": [
        [
          {
            "node": "N06-Merge-Toggle-With-Content",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-21T00:45:13.825Z",
  "id": "uUBVhsiEXzQm5eOv",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Test Notion Block Append v20250821-150500",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        -112
      ],
      "id": "746a84d7-6e16-472e-baf1-e56e88a265ee",
      "name": "N00 Manual Trigger"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "canonical_text",
              "name": "canonical_text",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "canonical_prompt",
              "name": "canonical_prompt",
              "value": "Markdown this piece of text into sections, subsections, paragraphs, lists and bolds.  Do not create any tables.",
              "type": "string"
            },
            {
              "id": "canonical_timestamp",
              "name": "canonical_timestamp",
              "value": "={{ new Date().toISOString() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        -112
      ],
      "id": "canonical-fields-node",
      "name": "N01-Set-Canonical-Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.canonical_prompt }}: {{ $json.canonical_text }}",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        448,
        -112
      ],
      "id": "f429d62c-9e7c-4d31-9fdb-a4efaa2fb9b1",
      "name": "N02-Generate-Markdown-Guide"
    },
    {
      "parameters": {
        "model": "gpt-oss:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        528,
        112
      ],
      "id": "b6faef13-9ed1-41eb-98a2-20a52c54f748",
      "name": "N03-Process-With-Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "i7QigsdBsQdZv3Mf",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "resource": "block",
        "blockId": {
          "__rl": true,
          "mode": "id",
          "value": "2551db9ba441805e9bd0fe21a317c8f0"
        },
        "blockUi": {
          "blockValues": [
            {
              "type": "toggle",
              "textContent": "=Markdown - Performance Max Guide {{ $now.format('(yyyy-MM-dd-HH:mm:ss)') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        800,
        -208
      ],
      "id": "n04a-create-toggle",
      "name": "N04a-Create-Toggle-Container",
      "credentials": {
        "notionApi": {
          "id": "MlSLKQmPnMyqW0ii",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "toggleId",
              "name": "toggleId",
              "value": "={{ $json.results.first().id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1024,
        -208
      ],
      "id": "n04b-extract-toggle-id",
      "name": "N04b-Extract-Toggle-ID"
    },
    {
      "parameters": {
        "jsCode": "const markdown = $input.first().json.text;\nconst blocks = [];\n\n// Simplified plain text parsing - removes markdown but maintains proper API structure\nfunction parseToSimpleRichText(text) {\n  // Remove markdown formatting markers for plain text\n  const cleanText = text\n    .replace(/\\*\\*(.*?)\\*\\*/g, '$1')  // Remove bold markers\n    .replace(/\\*(.*?)\\*/g, '$1')     // Remove italic markers\n    .trim();\n  \n  // Return proper rich_text structure for Notion API\n  return [{\n    type: 'text',\n    text: { content: cleanText }\n  }];\n}\n\n// Split by lines and process\nconst lines = markdown.split('\\n');\n\nfor (const line of lines) {\n  const trimmed = line.trim();\n  \n  if (!trimmed || trimmed === '---') continue; // Skip empty lines and separators\n  \n  let blockType;\n  let content = trimmed;\n  \n  if (trimmed.startsWith('# ')) {\n    blockType = 'heading_1';\n    content = trimmed.substring(2).trim();\n  } else if (trimmed.startsWith('## ')) {\n    blockType = 'heading_2';\n    content = trimmed.substring(3).trim();\n  } else if (trimmed.startsWith('### ')) {\n    blockType = 'heading_3';\n    content = trimmed.substring(4).trim();\n  } else if (trimmed.startsWith('- ')) {\n    blockType = 'bulleted_list_item';\n    content = trimmed.substring(2).trim();\n  } else if (trimmed.match(/^\\d+\\. /)) {\n    blockType = 'numbered_list_item';\n    content = trimmed.replace(/^\\d+\\. /, '').trim();\n  } else if (trimmed.startsWith('> ')) {\n    // Blockquotes become styled paragraphs\n    blockType = 'paragraph';\n    content = trimmed.substring(2).trim();\n  } else if (trimmed.startsWith('|')) {\n    // Table rows become paragraphs\n    blockType = 'paragraph';\n    content = trimmed;\n  } else {\n    // Regular text becomes paragraph\n    blockType = 'paragraph';\n    content = trimmed;\n  }\n  \n  // Generate blocks with proper rich_text structure\n  blocks.push({ \n    type: blockType,\n    [blockType]: {\n      rich_text: parseToSimpleRichText(content)\n    }\n  });\n}\n\n// Return the array as a field so Split Out can process it\nreturn [{ blocks: blocks }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        -16
      ],
      "id": "n05a-parse-markdown",
      "name": "N05a-Parse-Markdown-To-Blocks"
    },
    {
      "parameters": {
        "fieldToSplitOut": "blocks",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1024,
        -16
      ],
      "id": "n05b-split-to-items",
      "name": "N05b-Split-To-Items"
    },
    {
      "parameters": {
        "mode": "combineBySql",
        "query": "SELECT input1.toggleId, input2.* FROM input2 CROSS JOIN input1",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1248,
        -112
      ],
      "id": "n06-merge-toggle-content",
      "name": "N06-Merge-Toggle-With-Content"
    },
    {
      "parameters": {
        "resource": "block",
        "blockId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.toggleId }}"
        },
        "blockUi": {
          "blockValues": [
            {
              "type": "={{ $json.type }}",
              "textContent": "={{ $json[$json.type].rich_text[0].text.content }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1472,
        -112
      ],
      "id": "n07-append-inside-toggle",
      "name": "N07-Append-Inside-Toggle",
      "credentials": {
        "notionApi": {
          "id": "MlSLKQmPnMyqW0ii",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "inputMarkdown": "={{ $json.text }}"
      },
      "type": "n8n-nodes-notion-markdown.notionMarkdown",
      "typeVersion": 1,
      "position": [
        752,
        240
      ],
      "id": "4e3b6dcc-0d84-476a-9c0f-fe912c1e4d8e",
      "name": "Notion Markdown"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "options": {
          "disableDotNotation": false
        }
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1024,
        240
      ],
      "id": "4ff61083-2d20-430d-9799-436c5f851ff0",
      "name": "N05b-Split-To-Items1"
    }
  ],
  "pinData": {
    "N00a-Manual-Trigger": [
      {
        "json": {
          "text": "If you've ever felt like Performance Max was a black box of secrets where you hoped there was conversions and new sales inside, but sometimes it was just wasted ad spend, you're in luck because the good news is is that Google has finally released some reporting updates which is going to become available inside of the Google Ads dashboard. So, you can now get some extra data about your performance max campaigns without having to run external scripts or run any other APIs to find this data. Now, should Google Ads have released this data earlier? Yes. Do I know why they haven't? Got my theories, but we don't want to go down that path because it is a very dark path because what I want to do right now is I want to focus on this being a positive announcement because this is some great data which Google is giving us. And you know, hats off, where hats due. While I think they should have released it a lot earlier, hey, better late than never. So, what I want to focus on is that there's really three major updates in regards to the reporting that we're going to be seeing very, very soon. One of these you should already have. Depending on when you watch this video, you may or may not have these other two data inputs. What I wanted to focus on is how you can actually use these reporting insights to improve the performance of your account cuz ultimately that's why we run Google Ads cuz we want to see more conversions and more sales for our own businesses or our clients businesses."
        }
      }
    ],
    "N00 Manual Trigger": [
      {
        "json": {
          "text": "If you've ever felt like Performance Max was a black box of secrets where you hoped there was conversions and new sales inside, but sometimes it was just wasted ad spend, you're in luck because the good news is is that Google has finally released some reporting updates which is going to become available inside of the Google Ads dashboard. So, you can now get some extra data about your performance max campaigns without having to run external scripts or run any other APIs to find this data. Now, should Google Ads have released this data earlier? Yes. Do I know why they haven't? Got my theories, but we don't want to go down that path because it is a very dark path because what I want to do right now is I want to focus on this being a positive announcement because this is some great data which Google is giving us. And you know, hats off, where hats due. While I think they should have released it a lot earlier, hey, better late than never. So, what I want to focus on is that there's really three major updates in regards to the reporting that we're going to be seeing very, very soon. One of these you should already have. Depending on when you watch this video, you may or may not have these other two data inputs. What I wanted to focus on is how you can actually use these reporting insights to improve the performance of your account cuz ultimately that's why we run Google Ads cuz we want to see more conversions and more sales for our own businesses or our clients businesses."
        }
      }
    ]
  },
  "repo_name": "n8n-env",
  "repo_owner": "munishgandhi",
  "repo_path": "backup/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-23T07:16:03.000Z",
  "versionId": "45376eb8-67c1-45ff-b152-d3831f56a23a"
}