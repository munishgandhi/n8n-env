{
  "active": false,
  "connections": {
    "N05-Merge-Toggle-With-Content": {
      "main": [
        [
          {
            "node": "N06-Loop-Over-Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N06-Loop-Over-Items": {
      "main": [
        [],
        [
          {
            "node": "N07-Prepare-Block-Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N07-Prepare-Block-Data": {
      "main": [
        [
          {
            "node": "N08-Append-Inside-Toggle",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N08-Append-Inside-Toggle": {
      "main": [
        [
          {
            "node": "N09-Capture-Block-ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N09-Capture-Block-ID": {
      "main": [
        [
          {
            "node": "N06-Loop-Over-Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N03a-Create-Toggle": {
      "main": [
        [
          {
            "node": "N03b-Extract-Toggle-ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N03b-Extract-Toggle-ID": {
      "main": [
        [
          {
            "node": "N05-Merge-Toggle-With-Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N02-Set-Canonical-Fields": {
      "main": [
        [
          {
            "node": "N03a-Create-Toggle",
            "type": "main",
            "index": 0
          },
          {
            "node": "N03-MD-to-Notion-Blocks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N03-MD-to-Notion-Blocks": {
      "main": [
        [
          {
            "node": "N04-Split-Notion-Blocks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N04-Split-Notion-Blocks": {
      "main": [
        [
          {
            "node": "N05-Merge-Toggle-With-Content",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "N00-Start": {
      "main": [
        [
          {
            "node": "N02-Set-Canonical-Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-23T17:25:38.713Z",
  "id": "djCCWdvV9VVzqqRb",
  "isArchived": false,
  "meta": null,
  "name": "AddMDtoNotion v20250823-161549",
  "nodes": [
    {
      "parameters": {
        "inputMarkdown": "={{ $json.canonical_md }}"
      },
      "type": "n8n-nodes-notion-markdown.notionMarkdown",
      "typeVersion": 1,
      "position": [
        1040,
        -192
      ],
      "id": "4e3b6dcc-0d84-476a-9c0f-fe912c1e4d8e",
      "name": "N03-MD-to-Notion-Blocks"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "options": {
          "disableDotNotation": false
        }
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1264,
        -192
      ],
      "id": "4ff61083-2d20-430d-9799-436c5f851ff0",
      "name": "N04-Split-Notion-Blocks"
    },
    {
      "parameters": {
        "mode": "combineBySql",
        "query": "SELECT input1.toggleId, input2.* FROM input2 CROSS JOIN input1",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1488,
        -288
      ],
      "id": "n06-merge-toggle-content",
      "name": "N05-Merge-Toggle-With-Content"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1712,
        -288
      ],
      "id": "loop-over-items",
      "name": "N06-Loop-Over-Items"
    },
    {
      "parameters": {
        "jsCode": "// Get the block data\nconst blockData = $input.item.json;\n\n// Get the current item index from the Loop Over Items node\nconst currentItemIndex = $input.context?.currentItemIndex || 0;\n\n// Only use previousBlockId if we're not on the first item\nif (currentItemIndex > 0) {\n  const previousBlockId = $getWorkflowStaticData('global').previousBlockId;\n  if (previousBlockId) {\n    blockData.previousBlockId = previousBlockId;\n  }\n} else {\n  // First item - clear any old data\n  $getWorkflowStaticData('global').previousBlockId = null;\n}\n\nreturn blockData;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1936,
        -368
      ],
      "id": "prepare-block-data",
      "name": "N07-Prepare-Block-Data"
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.notion.com/v1/blocks/{{ $json.toggleId }}/children",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{\n  (() => {\n    const body = {\n      \"children\": [{\n        \"object\": \"block\",\n        \"type\": $json.type,\n        [$json.type]: $json[$json.type]\n      }]\n    };\n    \n    // Add 'after' parameter if we have a previous block ID\n    if ($json.previousBlockId) {\n      body.after = $json.previousBlockId;\n    }\n    \n    return body;\n  })()\n}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2160,
        -368
      ],
      "id": "n07-append-inside-toggle",
      "name": "N08-Append-Inside-Toggle",
      "credentials": {
        "notionApi": {
          "id": "MlSLKQmPnMyqW0ii",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extract the block ID from the response\nconst response = $input.item.json;\nlet blockId = null;\n\n// The response should have the created block's ID\nif (response.results && response.results.length > 0) {\n  blockId = response.results[0].id;\n} else if (response.id) {\n  blockId = response.id;\n}\n\n// Store the block ID for the next iteration\nif (blockId) {\n  $getWorkflowStaticData('global').previousBlockId = blockId;\n}\n\nreturn {\n  blockId: blockId,\n  success: blockId !== null\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2384,
        -288
      ],
      "id": "capture-block-id",
      "name": "N09-Capture-Block-ID"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0a46e487-8ed5-4d3e-89e5-aca37b5461e7",
              "name": "canonical_md",
              "value": "={{ $json.canonical_md }}",
              "type": "string"
            },
            {
              "id": "214dfd15-50b6-46a0-8993-6b48e829fc35",
              "name": "canonical_text",
              "value": "={{ $json.canonical_text }}",
              "type": "string"
            },
            {
              "id": "0ccd39cd-47ec-41ad-80ef-f333b2ca6f77",
              "name": "canonical_prompt",
              "value": "={{ $json.canonical_prompt }}",
              "type": "string"
            },
            {
              "id": "ec7ba01d-2fb4-4450-836a-7e134bcbbb6d",
              "name": "canonical_timestamp",
              "value": "={{ $json.canonical_timestamp }}",
              "type": "string"
            },
            {
              "id": "e6e248df-98c8-4dec-97ea-a854c545f990",
              "name": "canonical_page_id",
              "value": "={{ $json.canonical_page_id }}",
              "type": "string"
            },
            {
              "id": "f369ad15-0199-4301-b926-5e8ac55bcf71",
              "name": "canonical_yt_id",
              "value": "={{ $json.canonical_yt_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        816,
        -288
      ],
      "id": "7ca9b868-e871-4682-9927-37d6c7f3cbf7",
      "name": "N02-Set-Canonical-Fields"
    },
    {
      "parameters": {
        "resource": "block",
        "blockId": {
          "__rl": true,
          "value": "={{ $json.canonical_page_id }}",
          "mode": "id"
        },
        "blockUi": {
          "blockValues": [
            {
              "type": "toggle",
              "textContent": "=Transcript Markdown {{ $now.format('(yyyy-MM-dd-HH:mm:ss)') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1040,
        -384
      ],
      "id": "n04a-create-toggle",
      "name": "N03a-Create-Toggle",
      "credentials": {
        "notionApi": {
          "id": "MlSLKQmPnMyqW0ii",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "toggleId",
              "name": "toggleId",
              "value": "={{ $json.results.first().id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1264,
        -384
      ],
      "id": "n04b-extract-toggle-id",
      "name": "N03b-Extract-Toggle-ID"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "canonical_md",
              "type": "any"
            },
            {
              "name": "canonical_text",
              "type": "any"
            },
            {
              "name": "canonical_prompt",
              "type": "any"
            },
            {
              "name": "canonical_timestamp",
              "type": "any"
            },
            {
              "name": "canonical_page_id"
            },
            {
              "name": "canonical_yt_id"
            }
          ]
        }
      },
      "id": "1893f73c-4f1c-46ad-b7df-5b9745464d0c",
      "typeVersion": 1.1,
      "name": "N00-Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        592,
        -288
      ]
    }
  ],
  "pinData": {
    "N00-Start": [
      {
        "json": {
          "canonical_md": "# 1 Introduction\n\n**Performance Max** has long been perceived as a mysterious black box—full of potential conversions and sales, yet sometimes just a drain on ad spend.  \nGoogle has finally released new reporting updates that will be available directly within the Google Ads dashboard, eliminating the need for external scripts or APIs.\n\n# 1.1 Performance Max as a Black Box\n\nMany advertisers have felt the frustration of trying to decipher how their Performance Max campaigns truly perform.  \nThis new update promises clearer insight and a path toward better decision‑making.\n\n# 1.2 New Reporting Updates\n\n## 1.2.1 Data Availability\n\nYou can now access additional performance metrics for your campaigns *right inside* Google Ads.  \nNo extra code, no external services—just the data you need at your fingertips.\n\n## 1.2.2 Data Usage\n\nThese insights are designed to help you optimize your account by focusing on real performance indicators, not just surface‑level impressions.\n\n# 1.3 Theories About the Delayed Release\n\nWhile the release came a bit late, we’re not diving into speculation.  \nThe key point: **better late than never**.\n\n# 1.4 Positive Announcement\n\nThis is a **positive milestone**—Google is finally sharing the information that advertisers have been waiting for.  \nWe applaud the move and the transparency it brings.\n\n# 1.5 Three Major Updates Coming Soon\n\nBelow are the three core updates you’ll soon see in the dashboard.  \nDepending on when you view this content, you may already have the first update, while the other two will arrive shortly.\n\n## 1.5.1 Update One\n\n*Details on the first new metric, including how it aligns with your existing reporting structure.*\n\n## 1.5.2 Update Two\n\n*Second update description—focus on actionable data and how it feeds into optimization strategies.*\n\n## 1.5.3 Update Three\n\n*Third update—additional dimensions for deeper analysis and conversion tracking.*\n\n# 1.6 Using Insights to Improve Performance\n\nThe ultimate goal of Google Ads is to drive **more conversions and sales** for your business or your clients.  \nWith these fresh reporting tools, you can refine targeting, adjust budgets, and craft smarter creatives based on hard data, turning every dollar spent into measurable impact.",
          "canonical_text": "If you've ever felt like Performance Max was a black box of secrets where you hoped there was conversions and new sales inside, but sometimes it was just wasted ad spend, you're in luck because the good news is is that Google has finally released some reporting updates which is going to become available inside of the Google Ads dashboard. So, you can now get some extra data about your performance max campaigns without having to run external scripts or run any other APIs to find this data. Now, should Google Ads have released this data earlier? Yes. Do I know why they haven't? Got my theories, but we don't want to go down that path because it is a very dark path because what I want to do right now is I want to focus on this being a positive announcement because this is some great data which Google is giving us. And you know, hats off, where hats due. While I think they should have released it a lot earlier, hey, better late than never. So, what I want to focus on is that there's really three major updates in regards to the reporting that we're going to be seeing very, very soon. One of these you should already have. Depending on when you watch this video, you may or may not have these other two data inputs. What I wanted to focus on is how you can actually use these reporting insights to improve the performance of your account cuz ultimately that's why we run Google Ads cuz we want to see more conversions and more sales for our own businesses or our clients businesses.",
          "canonical_prompt": "Markdown text into heading 1, heading 2, heading 3, paragraphs and bolds. Do not create tables, lists and do not nest items more than 1 child deep. Number each heading with decimal system 1, 1.1, 1.2, 1.2.1, 1.2.2, etc.",
          "canonical_timestamp": "2025-08-23T20:00:12.511Z",
          "canonical_page_id": "2501db9b-a441-8004-bae6-d06a6db447e9",
          "canonical_yt_id": "QhaiqGPlY2Y"
        }
      }
    ]
  },
  "repo_name": "n8n-env",
  "repo_owner": "munishgandhi",
  "repo_path": "backup/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "global": {
      "previousBlockId": "2591db9b-a441-81d8-9a4a-c88d6b893724"
    }
  },
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-24T00:04:57.000Z",
  "versionId": "cbef3b4e-9213-4ad2-9c29-c97fc59b8084"
}